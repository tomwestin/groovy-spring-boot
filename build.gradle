buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.7.RELEASE")
        classpath("com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.4.0")
    }
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'mongo'

jar {
    baseName = 'groovy-spring-boot'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    jcenter()
}


sourceSets {
    integTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}

dependencies {
    compile("org.codehaus.groovy:groovy-all:2.3.7:indy")
    compile("org.springframework.boot:spring-boot-starter-web:1.1.7.RELEASE")
    compile("org.grails:gorm-mongodb-spring-boot:1.1.0.RELEASE")

    testCompile("org.springframework:spring-test:4.0.7.RELEASE")
    testCompile("org.spockframework:spock-spring:0.7-groovy-2.0")
    integTestCompile("org.codehaus.groovy.modules.http-builder:http-builder:0.7.2")
    integTestCompile("net.sf.json-lib:json-lib:2.4")

    runtime("org.springframework.boot:spring-boot-starter-data-mongodb:1.1.7.RELEASE")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

task integTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
    reports.junitXml.destination = file("${project.testResultsDir}/integTest")
    reports.html.destination = file("${project.reportsDir}/integTest")
}
check.dependsOn integTest


tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}
